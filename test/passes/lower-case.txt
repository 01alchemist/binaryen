(module
  (memory 0)
  (func $switcher (param $x i32) (result i32)
    (block $forswitch$switch$0
      (block $switch-default$3
        (block $switch-case$2
          (block $switch-case$1
            (tableswitch $switch$0
              (i32.sub
                (get_local $x)
                (i32.const 1)
              )
              (table (br $switch-case$1) (br $switch-case$2)) (br $switch-default$3)
            )
          )
          (return
            (i32.const 1)
          )
        )
        (return
          (i32.const 2)
        )
      )
      (nop)
    )
    (block $forswitch$switch$4
      (block $switch-default$7
        (block $switch-case$6
          (block $switch-case$5
            (tableswitch $switch$4
              (i32.sub
                (get_local $x)
                (i32.const 5)
              )
              (table (br $switch-case$6) (br $switch-default$7) (br $switch-default$7) (br $switch-default$7) (br $switch-default$7) (br $switch-default$7) (br $switch-default$7) (br $switch-case$5)) (br $switch-default$7)
            )
          )
          (return
            (i32.const 121)
          )
        )
        (return
          (i32.const 51)
        )
      )
      (nop)
    )
    (block $forswitch$label$break$Lout
      (block $switch-default$16
        (block $switch-case$15
          (block $switch-case$12
            (block $switch-case$9
              (block $switch-case$8
                (tableswitch $label$break$Lout
                  (i32.sub
                    (get_local $x)
                    (i32.const 2)
                  )
                  (table (br $switch-case$15) (br $switch-default$16) (br $switch-default$16) (br $switch-case$12) (br $switch-default$16) (br $switch-default$16) (br $switch-default$16) (br $switch-default$16) (br $switch-case$9) (br $switch-default$16) (br $switch-case$8)) (br $switch-default$16)
                )
              )
              (br $label$break$Lout)
            )
            (br $label$break$Lout)
          )
          (block $block0
            (loop $while-out$10 $while-in$11
              (br $while-out$10)
              (br $while-in$11)
            )
            (br $label$break$Lout)
          )
        )
        (block $block1
          (loop $while-out$13 $while-in$14
            (br $label$break$Lout)
            (br $while-in$14)
          )
          (br $label$break$Lout)
        )
      )
      (nop)
    )
    (return
      (i32.const 0)
    )
  )
)
