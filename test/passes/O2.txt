(module
  (type $FUNCSIG$i (func (result i32)))
  (type $FUNCSIG$vi (func (param i32)))
  (type $2 (func))
  (import "env" "get" (func $get (result i32)))
  (import "env" "set" (func $set (param i32)))
  (memory $0 0)
  (export "export" (func $split-loop-vars))
  (func $split-loop-vars (type $2)
    (local $0 i32)
    (local $1 i32)
    (set_local $0
      (i32.const 0)
    )
    (loop $loop
      (call $set
        (tee_local $1
          (get_local $0)
        )
      )
      (call $set
        (tee_local $0
          (i32.add
            (get_local $1)
            (i32.const 1)
          )
        )
      )
      (call $set
        (get_local $1)
      )
      (if
        (call $get)
        (br $loop)
      )
    )
  )
)
